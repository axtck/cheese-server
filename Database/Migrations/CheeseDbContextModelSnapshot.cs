// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(CheeseDbContext))]
    partial class CheeseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Database.Move", b =>
                {
                    b.Property<Guid>("MoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Check")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EndSquareSquareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PieceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StartSquareSquareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Take")
                        .HasColumnType("bit");

                    b.HasKey("MoveId");

                    b.HasIndex("EndSquareSquareId");

                    b.HasIndex("GameId");

                    b.HasIndex("PieceId");

                    b.HasIndex("StartSquareSquareId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("Database.Piece", b =>
                {
                    b.Property<Guid>("PieceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BoardColor")
                        .HasColumnType("int");

                    b.Property<int>("BoardPiece")
                        .HasColumnType("int");

                    b.HasKey("PieceId");

                    b.ToTable("Piece");
                });

            modelBuilder.Entity("Database.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Database.Square", b =>
                {
                    b.Property<Guid>("SquareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SquareLetter")
                        .HasColumnType("int");

                    b.Property<int>("SquareNumber")
                        .HasColumnType("int");

                    b.HasKey("SquareId");

                    b.ToTable("Square");
                });

            modelBuilder.Entity("Database.Game", b =>
                {
                    b.HasOne("Database.Player", "Player")
                        .WithMany("Games")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Move", b =>
                {
                    b.HasOne("Database.Square", "EndSquare")
                        .WithMany()
                        .HasForeignKey("EndSquareSquareId");

                    b.HasOne("Database.Game", "Game")
                        .WithMany("Moves")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Piece", "Piece")
                        .WithMany()
                        .HasForeignKey("PieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Square", "StartSquare")
                        .WithMany()
                        .HasForeignKey("StartSquareSquareId");
                });
#pragma warning restore 612, 618
        }
    }
}
